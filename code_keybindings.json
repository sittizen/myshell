// Place your key bindings in this file to override the defaultsauto[]
[ 
    // disable 
    {   "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active" 
    },
    // custom
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+y",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {   "key": "ctrl+t",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+0",
        "command": "editor.action.fontZoomReset"
    }, // move cursor
    {
        "key": "alt+i",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "up"
        }
    },{
        "key": "alt+k",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "down"
        }
    },{
        "key": "alt+j",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "left"
        }
    },{
        "key": "alt+l",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "right"
        }
    },{
        "key": "alt+o",
        "command": "cursorWordEndRight",
        "when": "editorTextFocus",
    },{
        "key": "alt+u",
        "command": "cursorWordLeft",
        "when": "editorTextFocus",
    },{
        "key": "alt+f",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "wrappedLineEnd"
        }
    },{
        "key": "alt+s",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "wrappedLineFirstNonWhitespaceCharacter"
        }
    },{
        "key": "alt+e",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "prevBlankLine"
        }
    },{
        "key": "alt+d",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "nextBlankLine"
        }
    },{ // move and select
        "key": "alt+shift+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+o",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+u",
        "command": "cursorWordEndLeftSelect",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+n",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus",
    },{
        "key": "alt+shift+m",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus",
    },{
        "key": "alt+k",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },{
        "key": "alt+i",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },{
        "key": "alt+i",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus",
    },{
        "key": "alt+k",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus",
    },{ // delete
        "key": "alt+n",
        "command": "deleteRight",
        "when": "textInputFocus && !editorReadonly"
    },{ 
        "key": "alt+m",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },{ 
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },{ // comment
        "key": "ctrl+\\",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly" 
    },{
        "key": "ctrl+shift+k",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
        },{
        "key": "ctrl+shift+i",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },{
        "key": "alt+shift+g",
        "command": "editor.action.goToDeclaration",
        "when": "editorTextFocus"
    },{ // debug
        "key": "ctrl+shift+[Comma] d",
        "command": "test-explorer.debug-test-at-cursor",
        "when": "editorTextFocus"
    },{ 
        "key": "ctrl+shift+[Comma] b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
    },{ 
        "key": "ctrl+shift+[Comma] r",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },{ 
        "key": "alt+shift+s",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },{
        "key": "alt+q",
        "command": "terminal.focus",
        "when": "!terminalFocus"
    },{
        "key": "alt+q",
        "command": "workbench.action.togglePanel",
        "when": "terminalFocus"
    }
]
